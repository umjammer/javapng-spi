<?xml version='1.0' encoding='UTF-8'?>
<project name="Sixlegs PNG" default="jar">
    <property file="${user.home}/build.properties" />
    <property file="build.properties" />

    <property name="src" location="src"/>
    <property name="lib" location="lib"/>
    <property name="build" location="build"/>
    <property name="dist" location="dist"/>

    <property name="javadoc.access" value="public"/>

    <property name="compile.target" value="1.1"/>
    <property name="compile.bootclasspath" value=""/> 
    <property name="compile.extdirs" value=""/>

    <property name="compile.debug" value="false"/>
    <property name="compile.deprecation" value="false"/>
    <property name="compile.optimize" value="false"/>

    <property name="images.txt" value="${build}/test/images.txt"/>
    <property name="version" value="1.3.0"/>

    <target name="init">
        <tstamp/>
        <path id="path.build">
            <fileset dir="${lib}" includes="**/*.jar"/>
        </path>
        <path id="path.run">
            <path refid="path.build"/>
            <pathelement path="${build}/main"/>
        </path>
        <path id="path.test">
            <path refid="path.run"/>
            <pathelement path="${build}/test"/>
        </path>
        <path id="path.images">
            <fileset dir="${src}/test/images" includes="**/*.png"/>
        </path>
    </target>

    <target name="compile" depends="init">
        <mkdir dir="${build}/main"/>
        <javac srcdir="${src}/main" destdir="${build}/main"
          target="${compile.target}" bootclasspath="${compile.bootclasspath}" extdirs="${compile.extdirs}"
          debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}">
             <classpath refid="path.build"/>
             <compilerarg compiler="jikes" value="-nowarn"/>
        </javac>
        <copy todir="${build}/main">
            <fileset dir="${src}/main" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="compile-tests" depends="compile">
        <mkdir dir="${build}/test"/>
        <javac srcdir="${src}/test" destdir="${build}/test"
          target="${compile.target}" bootclasspath="${compile.bootclasspath}" extdirs="${compile.extdirs}"
          debug="${compile.debug}" optimize="${compile.optimize}" deprecation="${compile.deprecation}">
             <classpath refid="path.run"/>
             <compilerarg compiler="jikes" value="-nowarn"/>
        </javac>
        <copy todir="${build}/test">
            <fileset dir="${src}/test" excludes="**/*.java"/>
        </copy>
    </target>

    <target name="test" depends="compile-tests">
        <junit>
            <!-- <jvmarg value="-Xprof"/> -->
            <formatter type="plain" usefile="false"/>
            <classpath refid="path.test"/>
            <test name="${testcase}" if="testcase"/>
            <batchtest unless="testcase">
                <fileset dir="${src}/test" includes="**/*Test.java"/>
            </batchtest>
        </junit>
    </target>

    <target name="clean" depends="init">
        <delete dir="${build}"/>
        <delete dir="${dist}"/>
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${dist}"/>
        <jar jarfile="${dist}/png.jar">
            <fileset dir="${build}/main"/>
        </jar>
    </target>

    <target name="javadoc" depends="compile" description="Generate the javadoc">
        <mkdir dir="${dist}/javadoc"/>
        <javadoc 
          sourcepath="${src}/main"
          destdir="${dist}/javadoc"
          access="${javadoc.access}"
          failonerror="true"
          packagenames="com.sixlegs.image.png.*"
          classpathref="path.run"
          Author="true"
          Version="true"
          Use="true"
        />
    </target>

    <target name="dist" depends="clean,test,javadoc,jar">
        <copy todir="${dist}/src">
            <fileset dir="${src}" excludes="test/**,**/*.java~"/>
        </copy>
        <copy todir="${dist}">
            <fileset dir="." includes="*.txt"/>
        </copy>

        <fixcrlf srcDir="${dist}" includes="**/*.txt,**/*.java,**/*.html" eol="unix"/>
        <tar destfile="${dist}/png-sixlegs-${version}.tar.gz" compression="gzip">
            <tarfileset prefix="png-sixlegs-${version}" dir="${dist}" excludes="*.zip,*.gz"/>
        </tar>

        <fixcrlf srcDir="${dist}" includes="**/*.txt,**/*.java,**/*.html" eol="dos"/>
        <zip destfile="${dist}/png-sixlegs-${version}.zip">
            <zipfileset prefix="png-sixlegs-${version}" dir="${dist}" excludes="*.zip,*.gz"/>
        </zip>
    </target>

    <target name="pmd" depends="init">
        <taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="path.build"/>
        <pmd rulesetfiles="rulesets/basic.xml,rulesets/coupling.xml,rulesets/imports.xml,rulesets/unusedcode.xml">
            <formatter type="html" toFile="pmd.html"/>
            <fileset dir="${src}/main">
                <include name="**/*.java"/>
            </fileset>
        </pmd>
    </target>
</project>
